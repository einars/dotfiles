[
  /*
  { "keys": ["ctrl+l"], 
    "command": "multicommand",
    "args": {
      "commands": [
        {"command": "expand_selection", "args": {"to": "brackets"} },
        {"command": "expand_selection", "args": {"to": "brackets"} },
      ]
    }
  },
*/
{"keys": ["ctrl+k", "ctrl+k"], "command": "focus_neighboring_group"},
{"keys": ["ctrl+b", "ctrl+b"], "command": "focus_neighboring_group"},

// ctrl-w deep in the vim fingers,
// not expecting to close the window
{"keys": ["ctrl+w"],       "command": "delete_word", "args": { "forward": false } },
{"keys": ["ctrl+shift+w"], "command": "close_file" },
{"keys": ["ctrl+alt+shift+w"], "command": "close" },
{"keys": ["ctrl+alt+w"],  "command": "close" },
//{"keys": ["ctrl+r"],      "command": "redo_or_repeat", },
{"keys": ["ctrl+d"],      "command": "move", "args": {"by": "pages", "forward": true} },
{"keys": ["ctrl+u"],      "command": "move", "args": {"by": "pages", "forward": false} },

{
  // vintage: enter moves to the _beginning_ of the next line,
  // not just directly down
  "keys": ["enter"], 
  "command": "multicommand",
  "context": [{"key": "setting.command_mode"}],

  "args": {
    "commands": [
      {
        "command": "set_motion", 
        "args": {
          "motion": "move",
          "motion_args": {"by": "wholelines", "forward": true, "extend": true }
        }
      },
      {
        "command": "set_motion", 
        "args": {
          "motion": "move_to",
          "motion_args": {"to": "bol", "extend": true},
        }
      },
    ]
  }
},

// dumb vintage replacements. can't be the best way
{"keys": ["r", "altgr+a"],       "command": "replace_character", "args": {"character": "ā"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+a"], "command": "replace_character", "args": {"character": "Ā"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+c"],       "command": "replace_character", "args": {"character": "č"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+c"], "command": "replace_character", "args": {"character": "Č"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+e"],       "command": "replace_character", "args": {"character": "ē"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+e"], "command": "replace_character", "args": {"character": "Ē"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+g"],       "command": "replace_character", "args": {"character": "ģ"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+g"], "command": "replace_character", "args": {"character": "Ģ"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+i"],       "command": "replace_character", "args": {"character": "ī"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+i"], "command": "replace_character", "args": {"character": "Ī"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+k"],       "command": "replace_character", "args": {"character": "ķ"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+k"], "command": "replace_character", "args": {"character": "Ķ"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+l"],       "command": "replace_character", "args": {"character": "ļ"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+l"], "command": "replace_character", "args": {"character": "Ļ"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+n"],       "command": "replace_character", "args": {"character": "ņ"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+n"], "command": "replace_character", "args": {"character": "Ņ"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+s"],       "command": "replace_character", "args": {"character": "š"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+s"], "command": "replace_character", "args": {"character": "Š"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+u"],       "command": "replace_character", "args": {"character": "ū"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+u"], "command": "replace_character", "args": {"character": "Ū"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+z"],       "command": "replace_character", "args": {"character": "ž"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "altgr+shift+z"], "command": "replace_character", "args": {"character": "Ž"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad0"], "command": "replace_character", "args": {"character": "0"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad1"], "command": "replace_character", "args": {"character": "1"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad2"], "command": "replace_character", "args": {"character": "2"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad3"], "command": "replace_character", "args": {"character": "3"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad4"], "command": "replace_character", "args": {"character": "4"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad5"], "command": "replace_character", "args": {"character": "5"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad6"], "command": "replace_character", "args": {"character": "6"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad7"], "command": "replace_character", "args": {"character": "7"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad8"], "command": "replace_character", "args": {"character": "8"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad9"], "command": "replace_character", "args": {"character": "9"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad_minus"],    "command": "replace_character", "args": {"character": "-"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad_plus"],     "command": "replace_character", "args": {"character": "+"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad_divide"],   "command": "replace_character", "args": {"character": "/"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad_multiply"], "command": "replace_character", "args": {"character": "*"}, "context": [{"key": "setting.command_mode"}] },
{"keys": ["r", "keypad_period"],   "command": "replace_character", "args": {"character": "."}, "context": [{"key": "setting.command_mode"}] },

 // Clojure Sublimed

 {"keys": ["ctrl+t"],
   "command": "clojure_sublimed_eval_code",
   "args": {"code":  "(let [{:keys [fail error] :as res} (clojure.test/run-tests)] (str (when (or (pos? fail) (pos? error)) \"🚨🚨🚨🚨🚨🚨🚨🚨 \") res))"},
   "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 {"keys": ["ctrl+alt+t"],
   "command": "clojure_sublimed_eval_code",
   "args": {"code":  "(let [{:keys [fail error] :as res} (clojure.test/run-tests)] (str (when (or (pos? fail) (pos? error)) \"🚨🚨🚨🚨🚨🚨🚨🚨 \") res))"},
   "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 {"keys": ["ctrl+alt+enter"],        "command": "clojure_sublimed_eval",       "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+keypad_enter"], "command": "clojure_sublimed_eval",       "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+b"],       "command": "clojure_sublimed_eval_buffer",     "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+c"],       "command": "clojure_sublimed_interrupt_eval",  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+i"],       "command": "clojure_sublimed_toggle_info",     "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+l"],       "command": "clojure_sublimed_clear_evals",     "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+e"],       "command": "clojure_sublimed_toggle_trace",    "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+d"],       "command": "clojure_sublimed_toggle_symbol",   "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+c"],           "command": "clojure_sublimed_copy",            "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+f"],       "command": "clojure_sublimed_reindent_lines",  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 {"keys": ["ctrl+alt+shift+f"], "command": "clojure_sublimed_reindent_buffer", "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 {"keys": ["ctrl+alt+r"],
   "command": "clojure_sublimed_eval_code",
   "args": {"code":  "(clj-reload.core/reload)"},
   "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Require Namespace
 // {"keys": ["ctrl+alt+r"], "command": "clojure_sublimed_require_namespace", "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 
 // // Insert New Line
 // {"keys": ["enter"],
 //  "command": "clojure_sublimed_insert_newline",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.edn | source.clojure"},
 //              {"key": "auto_complete_visible", "operator": "equal", "operand": false},
 //              {"key": "panel_has_focus", "operator": "equal", "operand": false}]},
]
