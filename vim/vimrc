set ttimeoutlen=100

let g:loaded_matchparen=1             " die, slow and needless matching paren highlighting
let g:searchEmptyLinesPostfixing = 3  " php folding stuff
let g:cursor_follows_alphabet = 1     " translit plugin

set showmatch               " jump to matching paren quickly
set matchtime=1

" sadly, autoindentations tend to go haywire with this
" set matchpairs=(:)

set history=1000

set nrformats=hex               " c-a, c-x won't treat 05 as octal
set wildmenu                    " filename etc completion on tab
set wildmode=full
set t_md=                       " no bold fonts in terminal

" set mouse=a                   " mouse support in console

set scrolloff=3

set nostartofline

set tabstop=4
set softtabstop=4
set shiftwidth=4

set expandtab
set autoindent
set wildchar=<Tab>

set laststatus=2                " good statusline is good
set statusline=%<%f\%h%m%r%=%-20.(%L\ %l:%c\ %)\ \ \%h%m%r%=\%P


set wildignore+=*.cmi,*.cmx,*.cmo,*.class,*.pyc
set suffixes-=.h


set backspace=indent,eol,start  " usable backspace

set hlsearch
set incsearch
set ignorecase                  " search ignores case while no uppercase is searched
set smartcase
set nowrap                      " dont' wrap the text


set textwidth=120               " screw purists


set hidden                      " suddenly, magically, buffers get usable
set autoread                    " don't care about ext-modified files, just reload them

filetype plugin indent on       " detect filetypes
syntax on                       " colors



" micro-templates: autoload template

autocmd BufNewFile * silent! 0r ~/.vim/templates/%:e.tpl



" Sane tabbing â€” tab vs autocomplete

function! InsertTabWrapper(direction)
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    elseif a:direction == "back"
        return "\<c-p>"
    else
        return "\<c-n>"
    endif
endfunction




""" Convenient command to see the difference between the current buffer and the
""" file it was loaded from, thus the changes you made.
"""
command! DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis | wincmd p | diffthis



if has('gui_running')
    
    """ I automatically :wq main vim much more often than I need to.
    """ So here I get rid of the wq command.
    cnoreabbr wq w


    set guifont=Droid\ Sans\ Mono\ 11

    set guioptions+=c       """ use console dialogs, not the gui ones
    set guioptions-=T       """ don't show the toolbar
    set guioptions-=m       """ don't show the menu
    set guioptions-=r       """ don't need right scrollbar
    set guioptions-=L       """ don't show left scrollbar

    """ gvim doesn't want to work nice with x clipboard
    map! <s-insert> <c-r>* 

    """ gvim weirdnesses
    map  <S-CR> <CR>
    imap <S-CR> <CR>



    """ i hate blinking cursor
    let &guicursor = &guicursor . ",a:blinkon0"

    colorscheme xoria256


else
    colorscheme desert
end


""" only underline on search

hi clear Search
hi Search cterm=underline gui=underline


""" subtly tell when lines are too long

au BufRead,BufNew *.js,*.php,*.c,*.cpp,*.h,*.htm,*.html let w:m1=matchadd('Error', '\%120v.', -1)
au BufRead,BufNew *.js,*.php,*.c,*.cpp,*.h,*.htm,*.html let w:m3=matchadd('Todo', '<+\w\++>', -1)
au BufRead,BufNew *.* call matchadd('Todo', '\(!!!\|///\).*', -1)




autocmd FileType python set tabstop=4|set shiftwidth=4|set expandtab " Python
autocmd FileType make set tabstop=8|set shiftwidth=8|set noexpandtab " Makefile
autocmd FileType php set keywordprg=~/bin/phpdoc

""" javascript indentation is brain-dead for jquery
autocmd FileType javascript set ai|set indentexpr=




" my color customizations.

if has('gui_running')

    hi phpString      guifg=#d1c79e
    hi phpRegion      guifg=#7ca4c8
    hi phpPrintfSpecifier guifg=#e3bb56
    hi phpKeyword     guifg=#7ca4c8
    hi phpFunction    guifg=#7ca4c8

    hi phpComment     guifg=#67686b
    hi phpFunctionDef guifg=orange
    hi pythonFunction guifg=orange
    hi phpIdentifier  guifg=#b8c0c8

    " limp crap
    hi Brackets       guibg=#444 guifg=white
    hi BracketsBlock  guibg=#444 guibg=lightgray


endif

hi link htmlTag htmlTagName
hi link htmlEndTag htmlTagName

""" make and set path for temp files

function! l:SetDir(path)
    if ! isdirectory(a:path) && exists('*mkdir')
        exec mkdir(a:path, '', 0700)
    endif
    if isdirectory(a:path)
        exec 'set dir=' . a:path
        exec 'set backupdir=' . a:path
    endif
endfunction


call l:SetDir($HOME . '/.vim-swap')



"""
"""
""" /// here go keymaps
""" 
"""


" don't care for the `, use it as '

nnoremap ` '


" scroll faster

nnoremap <c-e> 3<c-e>
nnoremap <c-y> 3<c-y>

" S&M

imap <c-up>     <Nop>
imap <c-down>   <Nop>
imap <c-left>   <Nop>
imap <c-right>  <Nop>
map  <c-up>     <Nop>
map  <c-down>   <Nop>
map  <c-left>   <Nop>
map  <c-right>  <Nop>

imap <up>       <Nop>
imap <down>     <Nop>
imap <left>     <Nop>
imap <right>    <Nop>
map  <up>       <Nop>
map  <down>     <Nop>
map   <left>    <Nop>
map  <right>    <Nop>

imap <pageup>   <nop>
imap <pagedown> <nop>
imap <home>     <nop>
imap <end>      <nop>
map  <pageup>   <nop>
map  <pagedown> <nop>
map  <home>     <nop>
map  <end>      <nop>

imap <del>      <nop>
imap <c-del>    <nop>
imap <m-del>    <nop>
map  <del>      <nop>
map  <c-del>    <nop>
map  <m-del>    <nop>

imap <c-pageup>     <nop>
imap <c-pagedown>   <nop>
map  <c-pageup>     <nop>
map  <c-pagedown>   <nop>


" k/j move by screen lines, not physical lines

nnoremap k gk
nnoremap j gj
nnoremap gk k
nnoremap gj j


" navigate buffers with ^z and ^c

imap <c-z> <esc>:bp<cr>
imap <c-c> <esc>:bn<cr>
map  <c-z> :bp<cr>
map  <c-c> :bn<cr>



"" navigate tabs with M-z and M-c
"
"imap <m-z> <esc>:tabp<cr>
"imap <m-c> <esc>:tabn<cr>
"map  <m-z> :tabp<cr>
"map  <m-c> :tabn<cr>


" search/replace on ;; and ;'

noremap ;; :%s:::g<Left><Left><Left>
noremap ;' :%s:::cg<Left><Left><Left><Left>


" no need for shift to enter command mode

nnoremap ; :


" use real tab on c-tab

imap <c-tab> <c-v><tab>


" microtemplates: C-j moves to next block marked by <+SOMETHING+>

nnoremap <c-j> /<+.\{-1,}+><cr>c/+>/e<cr>



" human tabs

inoremap <tab>   <c-r>=InsertTabWrapper("fwd")<cr>
inoremap <s-tab> <c-r>=InsertTabWrapper("back")<cr>


" c-space is omnicompletion

inoremap <nul> <c-x><c-o>


" PHP stuff: rebuild folds on s-f5

map <s-f5> <esc>:EnableFastPHPFolds<cr>


" resync colors on f5

map <f5> <esc>:syn sync fromstart<cr>


" f3 = select all to X clipboard

map <f3> <esc>mpgg"+yG`p
map <c-.> <esc>mpgg"+yG`p


" f7 / s-f7 nedtree

map <S-f7> :NERDTree<cr>
map <f7> :NERDTreeToggle<cr>

