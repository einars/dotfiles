#!/usr/bin/env zsh

HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000

setopt nohup

autoload -Uz compinit
compinit

setopt INC_APPEND_HISTORY
#setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE

setopt autocd
setopt extended_glob

setopt completeinword # global completion, not just end of word
setopt alwaystoend    # when completed from inside of word, move to an end
setopt histverify     # confirm "!" commands




autoload -U promptinit
promptinit

# http://www.acm.uiuc.edu/workshops/zsh/prompt/escapes.html
fg_red=%{$'\e[0;31m'%}
fg_green=%{$'\e[0;32m'%}
fg_yellowish=%{$'\e[0;33m'%}
fg_brownish=%{$'\e[0;35m'%}
fg_bluish=%{$'\e[0;36m'%}
reset_color=%{$'\e[0m'%}

prefix_sc_branch() {
    (( $+SCHROOT_USER )) && echo -n ${fg_green}arch32 $reset_color
    [ -z $BRANCH ] && [ -d .svn ] && BRANCH=`svn info 2>/dev/null| grep Revision | awk '{print "svn:"$2}'`
    [ -z $BRANCH ] && [ -d .git -o -d ../.git -o -d ../../.git -o -d ../../../.git ] && BRANCH=`git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    [ -z $BRANCH ] || echo "${fg_bluish}${BRANCH} "
}

prefix_user_host() {
    # prefix user, host or user@host depending on non-defaultness

    HOST_PART=$HOST
    USER_PART=$USER

    if [[ $SSH_CONNECTION = '' ]] {
        # don't print host when on localhost
        # (i.e print host for remotely connected systems, etc)
        HOST_PART=
    }
    if [[ $USER = 'e' || $USER = 'root' ]] {
        USER_PART=
    }
    if [[ $HOST_PART != '' || $USER_PART != '' ]] {
        echo -n $fg_brownish
        if [[ $USER_PART != '' ]] {
            echo -n $USER_PART
        }
        if [[ $HOST_PART != '' && $USER_PART != '' ]] {
            echo -n '@'
        }
        if [[ $HOST_PART != '' ]] {
            echo -n $HOST_PART
        }
        echo -n "$reset_color "
    }
}

prefix_pwd() {
    if [[ `id -u` == "0" ]] {
        echo -n $fg_red;
    }
    pwd
}

setopt PROMPT_SUBST
export PROMPT="`prefix_user_host`\`prefix_pwd\` \`prefix_sc_branch\`%(?,$fg_green,$fg_red)%#$reset_color "
export RPROMPT="%(?,,$fg_red( %? %)$reset_color"


eval "`dircolors -b`" 2>/dev/null

export LS_COLORS="ow=4" # all-writable folders are unreadable, so remove the formatting, leaving just underline


# remove \0 from IFS
export IFS=${IFS/$'\0'}

export PATH=~/bin:~/bin/private:$PATH

export EDITOR=vim
export VISUAL=vim
export OOO_FORCE_DESKTOP=gnome

# stupid fucking terminals

stty stop  '^-' # drop ^S flow control
stty start '^-' # drop ^Q flow control
stty susp undef # don't suspend on ctrl-Z


bindkey -e

typeset -g -A key

bindkey '\eq' push-line-or-edit

bindkey "^J" self-insert # sweet multiline input

bindkey '\e[3~' delete-char # delete key

bindkey "^[^[[D" emacs-backward-word # urxvt: alt + left arrow
bindkey "^[^[[C" emacs-forward-word  # urxvt: alt + right arrow

bindkey $(echotc kh) beginning-of-line # cursor home
bindkey $(echotc @7) end-of-line       # cursor end

# ubermagic on up/down
# http://codeinthehole.com/archives/17-The-most-important-command-line-tip-incremental-history-searching-with-.inputrc.html
bindkey "\e[A" history-beginning-search-backward
bindkey "\e[B" history-beginning-search-forward


if [[ $TERM == xterm ]]; then
    export TERM=xterm-256color
fi


function cd_hook()
{
    SKIPPED_DIRS=(/usr/bin /usr/lib)
    DIR=`pwd`
    test -f .description && cat .description
    test -f  description && cat  description
    if [[ -z ${(M)SKIPPED_DIRS:#$DIR} ]] {
        ls -l --color=tty
    }
}

chpwd_functions=('cd_hook')

. ~/.zsh/aliases
. ~/.zsh/aliases.private


# load host-specific customizations
customized=~/.zsh/zshrc.$HOST
if [[ -f $customized ]]; then
    source $customized
fi



